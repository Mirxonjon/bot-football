const { bot } = require("../bot");
const Users = require("../../model/users");
const {
  adminKeyboardUZ,
  adminKeyboardRu,
  userKeyboardUz,
  userKeyboardRu,
} = require("../menu/keyboard");

const editCard = async (msg) => {
  const chatId = msg.from.id;
  const text = msg.text;
  let user = await Users.findOne({ chat_id: chatId }).lean();
  console.log("user", user);

  if (user?.username == "mirjalolborataliyev") {
    user.action = "edit_card";
    await Users.findByIdAndUpdate(user._id, user, { new: true });

    const TextUz = `
üí≥ Kartani yangilash

Iltimos, yangi karta raqamingizni yuboring. 
üìå Namuna: 1234 5678 9012 3456 (16 ta raqam)
`;

    const TextRu = `
üí≥ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–∞—Ä—Ç—ã

–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–æ–≤—ã–π –Ω–æ–º–µ—Ä –≤–∞—à–µ–π –∫–∞—Ä—Ç—ã. 
üìå –ü—Ä–∏–º–µ—Ä: 1234 5678 9012 3456 (16 —Ü–∏—Ñ—Ä)
`;

    bot.sendMessage(chatId, user.language == "uz" ? TextUz : TextRu, {
      reply_markup: {
        keyboard: [
          [
            {
              text: user.language === "uz" ? "üîô Orqaga" : "üîô –ù–∞–∑–∞–¥",
            },
          ],
        ],

        resize_keyboard: true,
      },
    });
  } else {
    const TextUz = `‚ùå Kechirasiz, bu bo'lim faqat adminlar uchun.`;

    const TextRu = `‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.`;
    bot.sendMessage(chatId, user.language == "uz" ? TextUz : TextRu, {
      reply_markup: {
        keyboard: user.language == "uz" ? adminKeyboardUZ : adminKeyboardRu,
        resize_keyboard: true,
      },
    });
  }
};

const editedCard = async (msg) => {
  const chatId = msg.from.id;
  const text = msg.text;
  let user = await Users.findOne({ chat_id: chatId }).lean();
  console.log("user", user);

  if (text === "üîô Orqaga" || text === "üîô –ù–∞–∑–∞–¥") {
    user.action = "menu";
    await Users.findByIdAndUpdate(user._id, user, { new: true });

    bot.sendMessage(
      chatId,
      user.language == "uz" ? `Menyuni tanlang ` : `–í—ã–±–µ—Ä–∏—Ç–µ –º–µ–Ω—é `,
      {
        reply_markup: {
          keyboard: user.language == "uz" ? adminKeyboardUZ : adminKeyboardRu,
          resize_keyboard: true,
        },
      }
    );
  } else {
    if (user?.username == "mirjalolborataliyev") {
      user.action = "menu";
      user.cardNumber = text;
      await Users.findByIdAndUpdate(user._id, user, { new: true });

      const textUz = `‚úÖ Karta muvaffaqiyatli yangilandi!`;

      const textRu = `‚úÖ –ö–∞—Ä—Ç–∞ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞!`;

      await bot.sendMessage(chatId, user.language === "uz" ? textUz : textRu, {
        reply_markup: {
          keyboard: user.language == "uz" ? adminKeyboardUZ : adminKeyboardRu,
          resize_keyboard: true,
        },
      });

      const allUsers = await Users.find({});
      const notifyTextUz = `
‚ùóÔ∏èDiqqat! Karta raqami yangilandi.
Endilikda barcha to‚Äòlovlar faqat quyidagi karta raqamiga amalga oshirilishi kerak:
${text}
Agar boshqa kartaga to‚Äòlov qilinsa, bu to‚Äòlov qabul qilinmaydi.
Iltimos, e‚Äôtiborli bo‚Äòling.
`;

      const notifyTextRu = `
‚ùóÔ∏è–í–Ω–∏–º–∞–Ω–∏–µ! –ù–æ–º–µ—Ä –∫–∞—Ä—Ç—ã –±—ã–ª –æ–±–Ω–æ–≤–ª–µ–Ω.
–¢–µ–ø–µ—Ä—å –≤—Å–µ –ø–ª–∞—Ç–µ–∂–∏ –¥–æ–ª–∂–Ω—ã –æ—Å—É—â–µ—Å—Ç–≤–ª—è—Ç—å—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é –∫–∞—Ä—Ç—É:
${text}
–ï—Å–ª–∏ –ø–µ—Ä–µ–≤–æ–¥ –±—É–¥–µ—Ç —Å–¥–µ–ª–∞–Ω –Ω–∞ –¥—Ä—É–≥—É—é –∫–∞—Ä—Ç—É, –æ–Ω –Ω–µ –±—É–¥–µ—Ç –ø—Ä–∏–Ω—è—Ç.
–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –±—É–¥—å—Ç–µ –≤–Ω–∏–º–∞—Ç–µ–ª—å–Ω—ã.
`;

      for (const u of allUsers) {
        try {
          await bot.sendMessage(
            u.chat_id,
            u.language === "uz" ? notifyTextUz : notifyTextRu
          );
        } catch (err) {
          console.log("Xabar yuborishda xato:", err.message);
        }
      }
    } else {
      const TextUz = `‚ùå Kechirasiz, bu bo'lim faqat adminlar uchun.`;

      const TextRu = `‚ùå –ò–∑–≤–∏–Ω–∏—Ç–µ, —ç—Ç–æ—Ç —Ä–∞–∑–¥–µ–ª –¥–æ—Å—Ç—É–ø–µ–Ω —Ç–æ–ª—å–∫–æ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞–º.`;
      bot.sendMessage(chatId, user.language == "uz" ? TextUz : TextRu, {
        reply_markup: {
          keyboard: user.admin
            ? user.language == "uz"
              ? adminKeyboardUZ
              : adminKeyboardRu
            : user.language == "uz"
            ? userKeyboardUz
            : userKeyboardRu,
          resize_keyboard: true,
        },
      });
    }
  }
};

module.exports = {
  editCard,
  editedCard,
};
